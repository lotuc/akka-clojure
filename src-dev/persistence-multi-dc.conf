akka {
  loglevel = INFO

  actor {
    provider = cluster

    serializers {
      nippy = "lotuc.akka.serialization.NippySerializer"
    }

    serialization-bindings {
      "clojure.lang.IObj" = nippy
    }
  }

    # For the sample, just bind to loopback and do not allow access from the network
    # the port is overridden by the logic in main class
    remote.artery {
      canonical.port = 0
      canonical.hostname = 127.0.0.1
    }

    cluster {
      seed-nodes = [
        "akka://PersistenceMultiDc@127.0.0.1:2551",
        "akka://PersistenceMultiDc@127.0.0.1:2552"]

      # Needed when running many actor systems in the same JVM
      jmx.multi-mbeans-in-same-jvm = on

      downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"

      multi-data-center {
        self-data-center = "eu-west"
      }
    }

    persistence {
      journal.plugin = "akka.persistence.cassandra.journal"
    }

  }

# don't do this in production, convenient for local example
akka.persistence.cassandra {
 journal {
   keyspace-autocreate = true
   tables-autocreate = true
 }
 snapshot {
   keyspace-autocreate = true
   tables-autocreate = true
 }
}

datastax-java-driver.advanced.reconnect-on-init = true


# Akka Management config: https://developer.lightbend.com/docs/akka-management/current/index.html
akka.management {
  http.hostname = "127.0.0.1"
  http.port = 19999
}
